###############
# Base Config #
###############

# set windows key and alt key
set $mod Mod4
set $alt Mod1

# Font for window titles and bars unless specified in bar {}
font pango:Ununtu Regular 10
#font pango:DejaVu Sans Mono 8

###################
# Window Settings #
###################

# window border
for_window [class=".*"] border pixel 0

# window gaps
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 1
        bindsym minus gaps outer current minus 1
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 1
        bindsym Shift+minus gaps outer all minus 1
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 1
        bindsym minus gaps inner current minus 1
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 1
        bindsym Shift+minus gaps inner all minus 1
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 1
        bindsym minus gaps horizontal current minus 1
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 1
        bindsym Shift+minus gaps horizontal all minus 1
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 1
        bindsym minus gaps vertical current minus 1
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 1
        bindsym Shift+minus gaps vertical all minus 1
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 1
        bindsym minus gaps top current minus 1
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 1
        bindsym Shift+minus gaps top all minus 1
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 1
        bindsym minus gaps right current minus 1
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 1
        bindsym Shift+minus gaps right all minus 1
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 1
        bindsym minus gaps bottom current minus 1
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 1
        bindsym Shift+minus gaps bottom all minus 1
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 1
        bindsym minus gaps left current minus 1
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 1
        bindsym Shift+minus gaps left all minus 1
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left  will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up    will shrink the window’s height.
        # Pressing down  will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

#############
# workspace #
#############

# Define names for default workspaces
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+Prior workspace next
bindsym $mod+Next workspace prev

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+minus move scratchpad
bindsym $mod+plus scratchpad show

# Assign clients on specific workspaces (use xprop for class)
#assign [class=""] 1
#assign [class="" instance=""] 2

############################################
# autostart services/applications on login #
############################################

# Start XDG autostart .desktop files using dex.
exec --no-startup-id dex --autostart --environment i3

# Network Manager Applet for GUI system tray.
exec_always --no-startup-id nm-applet

# xss-lock with i3-lock for locking before suspend . Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock -i ~/.config/wallpapers/i3lock.png --nofork

# Polkit-gnome for authentication.
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# feh/nitrogen for wallpaper
exec_always --no-startup-id feh --bg-fill ~/.config/wallpapers/wallpaper.png
# exec --no-startup-id nitrogen --restore

# xsettings daemon
exec_always --no-startup-id xsettingsd &

# compositor
exec_always --no-startup-id picom --config ~/.config/picom/picom.conf

# notification daemon
exec_always --no-startup-id dunst --config ~/.config/dunst/dunstrc

# clipboard manager
exec_always --no-startup-id parcellite

##############
# power_menu #
##############

#i3 power_menu
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (p) poweroff
mode "$mode_system" {
    bindsym l exec --no-startup-id i3lock -i ~/.config/wallpapers/i3lock.png, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id "i3-nagbar -t warning -m 'Restart' -b '' 'systemctl reboot'", mode "default"
    bindsym p exec --no-startup-id "i3-nagbar -t warning -m 'Poweroff' -b '' 'systemctl poweroff'", mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+p mode "$mode_system"

###############
# keybindings #
###############

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# start dmenu/rofi
# bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+d exec "rofi -modi drun,run -show drun"

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Use xorg-xbacklight for backlight control
bindsym XF86MonBrightnessUp exec xbacklight +5 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"
bindsym XF86MonBrightnessDown exec xbacklight -5 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# keybindings for apps
bindsym $Alt+f exec --no-startup-id firefox
bindsym $Alt+n exec --no-startup-id nautilus
bindsym $Alt+a exec --no-startup-id authy desktop
bindsym  Print exec --no-startup-id gnome-screenshot
#bindsym $Alt+t exec tradingview

#######
# bar #
#######

# i3bar
bar {
        position bottom
        separator_symbol " "
        font pango:Ubutnu Regular 11
#       mode hide
#       hidden_state hide
#       modifier Mod4
        status_command i3blocks -c ~/.config/i3blocks/config
#       status_command i3status -c ~/.config/i3status/config
        i3bar_command i3bar -t

colors {
        background         #1E1E2E33
#       statusline
#       seperator
#                          <border>   <background>   <text>    <indicator>
        focused_workspace  #B4BEFE      #1E1E2E      #CDD6F4   
        active_workspace   #B4BEFE      #1E1E2E      #CDD6F4
        inactive_workspace #6C7086      #181825      #BAC2DE
        urgent_workspace   #2f343a      #900000      #ffffff
        binding_mode       #2f343a      #900000      #ffffff
        }

}

bindsym Mod4+b bar mode toggle

